// 배열 - 인스턴스와 레퍼런스
package ch03;

public class Test14 {
  public static void main(String[] args) {
    // 값을 담고 있는 메모리 => 인스턴스
    // 인스턴스 주소를 담고 있는 메모리 => 레퍼런스
   int[] arr1 = {101, 102, 103, 104, 105};
   int[] arr2 = {81, 82, 83, 84, 85};
   
   arr2=arr1; //arr1에 저장 된 주소를 arr2에 복사한다
   // 원래 arr2에 저장되었던 배열 주소는 잃어버려 더이상 그 배열을 사용할 수 없음
   // 주소를 잃어 버려 사용할 수 없는 메모리를 garbage라고 부른다
   
   System.out.printf("%d, %d\n", arr1[1], arr2[1]);
   
   arr1[1] = 500;
   
   //arr1 이나 arr2 모두 같은 배열 인스턴스를 가리키기 때문에 값은 같다.
   System.out.printf("%d, %d\n", arr1[1], arr2[1]);
   
   
  }
}

// 가비지(garbage) : garbage collector에 의해 메모리 해제 됨
// 메모리 해제 : 다른 용도로 사용할 수 있도록 표시한다는 의미
// 가비지 수집 조건 
//  - 메모리가 부족할 때
//     - 운영체제로부터 메모리를 추가로 받기 전에 먼저 기존에 사용하던 메모리에서 가비지를 제거한다
//  - CPU가 한갈할 때
//     - 24시간 365일 내내 실행하는 서버 프로그램인 경우, 중간에 CPU가 한가할 때 가비지 제거
//  - 주의! 
//     - 프로그램(JVM)을 종료하면 JVM 사용한 메모리를 운영체제가 모두 회수

// System.gc();
// 가비지 컬렉터를 강제로 실행하는 방법은 없음
// 단 원래 계획보다 가능한 빨리 실행하라고 독촉하는 방법은 있음
// 바로 실행할 지 나중에 실행할 것인지 그 시점을 보장하지 않는다
